/* Tiny reset thingy */

html {
  margin: 0;
  padding: 0;
}

body {
  font-family: "PT Sans", sans-serif;
  background-color: rgb(255 255 255);
  margin: 0;
  padding: 0;
}

h1 {
  color: rgb(218, 136, 218);
  text-align: center;
  font-size: 4em;
  font-weight: lighter;
  text-shadow: 5px 5px 10px lightskyblue;
  width: 20%;
  margin: 5% auto;
}

h1:hover {
  color: lightskyblue;
  text-shadow: 5px 5px 10px rgb(218, 136, 218);
  cursor: pointer;
}

.banner-box {
  height: 70vh;
  width: 70%;
  background-color: rgb(243 233 228);
  margin: 0 auto;
  /* box-shadow: 0 8px 15px -6px black; */
}

.banner-img {
  height: 100%;
  vertical-align: middle;
  display: inline-block;
}

/* .banner-box:hover {
  filter: brightness(110%);
  cursor: pointer;
}

*/

.container {
  display: inline-block;
}

.social-media-logo {
  height: 60px;
  margin: 0 auto;
}

/**/

.wrapper {
  /* The height needs to be set to a fixed value for the effect to work.
   * 100vh is the full height of the viewport. */
  height: 100vh;
  /* The scaling of the images would add a horizontal scrollbar, so disable x overflow. */
  overflow-x: hidden;
  /* Enable scrolling on the page. */
  overflow-y: auto;
  /* Set the perspective to 2px. This is essentailly the simulated distance from the viewport to transformed objects.*/
  perspective: 2px;
}

.section {
  /* Needed for children to be absolutely positioned relative to the parent. */
  position: relative;
  /* The height of the container. Must be set, but it doesn't really matter what the value is. */
  height: 100vh;
  /* For text formatting. */
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  text-shadow: 0 0 5px #000;
  margin-top: 10%;
}

.parallax::after {
  /* Display and position the pseudo-element */
  content: " ";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  /* Move the pseudo-element back away from the camera,
   * then scale it back up to fill the viewport.
   * Because the pseudo-element is further away, it appears to move more slowly, like in real life. */
  transform: translateZ(-1px) scale(1.5);
  /* Force the background image to fill the whole element. */
  background-size: 100%;
  /* Keep the image from overlapping sibling elements. */
  z-index: -1;
}

/* The styling for the static div. */

.static {
  background: white;
  height: 100%;
}

/* Sets the actual background images to adorable kitties. This part is crucial. */

.bg1::after {
  background-image: url("images/IMG_2240.jpeg");
  background-size: 500px;
  background-position: right;
  /* Center the image */
  background-repeat: no-repeat;
  /* Do not repeat the image */
  margin-right: 20%;
}

.bg2::after {
  background-image: url("images/FullSizeRender.jpeg");
  background-size: 700px;
  background-position: left;
  /* Center the image */
  background-repeat: no-repeat;
  /* Do not repeat the image */
  margin-left: 20%;
}